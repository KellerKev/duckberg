services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    networks:
      iceberg_net:
    container_name: spark-iceberg
    build: spark/
    depends_on:
      - rest
      - minio
      - mc
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
    command:
      - |
        echo "Init running ..."
        spark-submit /home/iceberg/notebooks/notebooks/init.py
        echo "Done init ..."

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: minio
    command: server --console-address ":9001" /data  

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      echo 'Removing bucket ...';
      /usr/bin/mc rm -r --force minio/warehouse;
      echo 'Done removing bucket ... recreating bucket';
      /usr/bin/mc mb minio/warehouse;
      echo 'Done creating bucket';
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "   

  duckberg_example:
    depends_on:
      - rest
      - minio
      - mc
      - spark-iceberg
    build: ./src
    networks:
      iceberg_net:
    volumes:
      - "./src/:/app/"
    hostname: app


networks:
  iceberg_net:
